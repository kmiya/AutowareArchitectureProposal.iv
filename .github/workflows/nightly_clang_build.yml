name: Clang(-Tidy) nightly build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *" # run at 4 AM JST

jobs:
  build-using-clang:
    runs-on: ubuntu-latest
    container: ubuntu:focal

    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          ref: ros2

      - name: Setup ROS environment
        uses: ros-tooling/setup-ros@v0.1
        with:
          required-ros-distributions: foxy

      # - name: Store all package names to ENV
      #   run: |
      #     mkdir dependency_ws
      #     vcs import dependency_ws < build_depends.repos
      #     echo "PACKAGE_NAMES=$(colcon list -nt | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Install Clang-Tidy and OpenMP lib for Clang
        run: |
          sudo apt install -y clang-tidy-11 libomp-dev

      # - name: Run action-ros-ci
      #   continue-on-error: true
      #   id: action_ros_ci_step
      #   uses: ros-tooling/action-ros-ci@v0.2
      #   with:
      #     package-name: ${{ env.PACKAGE_NAMES }}
      #     target-ros2-distro: foxy
      #     vcs-repo-file-url: build_depends.repos
      #     colcon-mixin-name: release compile-commands
      #     # If possible, pin the repository in the workflow to a specific commit to avoid
      #     # changes in colcon-mixin-repository from breaking your tests.
      #     colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml
      #     extra-cmake-args: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_CXX_FLAGS='-Wthread-safety' -DFORCE_BUILD_VENDOR_PKG=ON

      - name: Install CodeChecker
        continue-on-error: true # may get 'bdist_wheel' error
        run: |
          # Instruction https://github.com/Ericsson/codechecker#linux
          sudo apt install -y doxygen gcc-multilib python3-dev python3-venv

          git clone https://github.com/Ericsson/CodeChecker.git --depth 1 ~/codechecker
          cd ~/codechecker

          # Got 'bdist_wheel' error? No problem. See https://github.com/Ericsson/codechecker/issues/3108#issuecomment-748120874
          pip3 install -r ./analyzer/requirements.txt

          # Build CodeChecker without the web UI.
          BUILD_UI_DIST=NO make package

          run: echo "${GITHUB_WORKSPACE}/build/CodeChecker/bin" >> ${GITHUB_PATH}
          cd ..

      - name: Analyse using Clang-Tidy
        run: |
          CodeChecker analyze build/compile_commands.json --config codechecker-config.json --output ./reports
          CodeChecker parse -e html ./reports -o ./public/pr-check/main/tidy-reports --trim-path-prefix ${PWD}

      - name: Deploy analyse results to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
